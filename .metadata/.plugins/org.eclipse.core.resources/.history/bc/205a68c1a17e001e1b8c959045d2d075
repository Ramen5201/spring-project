package com.kh.spring.board.controller;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.kh.spring.board.model.service.BoardService;
import com.kh.spring.board.model.vo.Board;
import com.kh.spring.common.model.vo.PageInfo;
import com.kh.spring.common.template.Pagenation;

@Controller
public class BoardController {
	
	@Autowired
	private BoardService boardService;
	
//	@RequestMapping("list.bo")
//	public String selectList(@RequestParam(value="cpage", defaultValue="1") int currentPage, Model model) {
//		int boardCount = boardService.selectListCount();
//		
//		PageInfo pi = Pagenation.getPageInfo(boardCount, currentPage, 10, 5);
//		
//		ArrayList<Board> list = boardService.selectList(pi);
//		
//		model.addAttribute("list", list);
//		model.addAttribute("pi", pi);
//		
//		return "board/boardListView";
//	}
	
	@RequestMapping("list.bo")
	public ModelAndView selectList(@RequestParam(value="cpage", defaultValue="1") int currentPage, ModelAndView mv) {
		
		PageInfo pi = Pagenation.getPageInfo(boardService.selectListCount(), currentPage, 10, 5);
		
		mv.addObject("pi", pi).addObject("list", boardService.selectList(pi)).setViewName("board/boardListView");
		
		return mv;
	}
	
	@RequestMapping("enrollForm.bo")
	public String enrollForm() {
		return "board/boardEnrollForm";
	}
	
	@RequestMapping("insert.bo")
	public String insertBoard(Board b, MultipartFile upfile, HttpSession session) {
		//System.out.println(b);
		//System.out.println(upfile);
		
		// 전달된 파일이 있을경우 => 파일명 수정 후 서버 업로드 => 원본명, 서버업로드된 경로로 board에 담기(파일이 있을 때만)
		if(!upfile.getOriginalFilename().equals("")) {
		    // 파일명 수정 후 서버 업로드 시키기("이미지저장용.jpg") = > 20231109102712345.jpg
			// 년월일시분초 + 랜덤숫자 5개 + 확장자
			
			// 원래 파일명
			String originName = upfile.getOriginalFilename(); 
			
			// 시간정보 (년월일시분초)
			String currentTime = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());
			
			// 랜덤숫자 5자리
			int ranNum = (int)(Math.random() * 90000) + 10000;
			
			// 확장자
			String ext = originName.substring(originName.lastIndexOf("."));
			
			// 변경된 이름
			String changeName = currentTime + ranNum + ext;
			
			// 첨부파일 저장할 폴더의 물리적인 경우
			String savePath = session.getServletContext().getRealPath("/resources/uploadFiles/");
			
			try {
				upfile.transferTo(new File(savePath + changeName));
			} catch (IllegalStateException | IOException e) {
				e.printStackTrace();
			}
			
		
		
		
		return "board/boardEnrollForm";
	}
  }
}
