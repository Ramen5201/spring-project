package com.kh.spring.member.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.kh.spring.member.model.vo.Member;

@Controller // Controller타입의 어노테이션 빈 스캐닝을 통해 자동으로 빈 등록
public class MemberController {
	
	/*
	 * Spring에서 파라미터(요청시 전달값)을 받는 방법
	 * 
	 * 1. HttpServletRequest를 이용해서 전달받기(JSP/Servlet방식)
	 * 	     해당 메소드의 매개변수로 HttpServletRequest를 작성해두면
	 *     스프링 컨테이너가 해당 메소드를 호출시 자동으로 해당 객체를 생성해서 매개변수로 주입해줌
	 */
	
	/*
	@RequestMapping(value="/login.me") // RequestMapping타입의 어노테이션을 붙여줌으로써 HandlerMapping 등록
	public String loginMember(HttpServletRequest request) {
		String userId = request.getParameter("id");
		String userPwd = request.getParameter("pwd");
		
		System.out.println("ID : " + userId);
		System.out.println("PWD : " + userPwd);
		
		return "main";
	}
	*/
	
	/*
	 * 2. @RequestParam 어노테이션을 이용하는 방법
	 * request.GetParameter("키")로 벨류를 추출하는 대신 해주는 어노테이션
	 * 
	 * value속성의 jsp에서 작성했던 name속성값을 담으면 알아서 해당 매개변수로 받아올 수 있다.
	 * 만약, 넘어온 값이 비어있는 상태라면 defaultValue속성으로 기본값을 지정할 수 있다. 
	 * 
	 */
	
	/*
	@RequestMapping(value="/login.me") 
	public String loginMember(@RequestParam(value="id", defaultValue="aaa") String userId, 
							   @RequestParam(value="pwd") String userPwd) {
		
		System.out.println("ID : " + userId);
		System.out.println("PWD : " + userPwd);
		
		return "main";
	}
	*/
	
	/*
	 * 3. @RequestParam 어노테이션을 생략하는 방법
	 * 단, 매개변수명을 jsp의 name속성값(요청시 전달하는 값의 키값)과 동일하게 세팅해줘야 자동으로 값이 주입됨
	 * 위에서 썻던 defaultValue 추가 속성 사용할 수 없음
	 */
	
	/*
	@RequestMapping(value="/login.me") 
	public String loginMember(String id, String pwd) {
		
		Member m = new Member();
		m.setUserId(id);
		m.setUserPwd(pwd);
		
		System.out.println("ID : " + m.getUserId());
		System.out.println("PWD : " + m.getUserPwd());
		
		return "main";
	}
	*/
	
	/*
	 * 4. 커맨드 객체 방식
	 * 
	 * 해당 메소드의 매개변수로 
	 * 요청시 전달값을 담고자 하는 VO 클래스의 타입을 세팅 후 
	 * 요청시 전달 값의 키값(jsp name속성 값)을 vo클래스에 담고자하는 필드명으로 작성
	 */
	
	@RequestMapping(value="/login.me") 
	public String loginMember(Member m) {
		
		
		System.out.println("ID : " + m.getUserId());
		System.out.println("PWD : " + m.getUserPwd());
		
		return "main";
	}
}
